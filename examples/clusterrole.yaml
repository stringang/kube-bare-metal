---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-operator
rules:
  - verbs:
      - get
      - list
      - watch
    apiGroups:
      - '*'
    resources:
      - '*'
  - verbs:
      - get
      - list
      - watch
    nonResourceURLs:
      - '*'
  - verbs:
      - impersonate # <-----
    apiGroups:
      - ''
    resources:
      - serviceaccounts
      - users
      - groups
  - verbs:
      - get
      - list
      - watch
      - create
      - delete
      - deletecollection
      - patch
      - update
    apiGroups:
      - ''
    resources:
      - pods
      - pods/attach
      - pods/exec
      - pods/portforward
      - pods/proxy
      - pods/eviction
      - namespaces

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: cluster-admin
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: 'true'
subjects:
  - kind: ServiceAccount
    name: admin
    namespace: kube-system
  - kind: Group
    apiGroup: rbac.authorization.k8s.io
    name: 'system:masters'
  - kind: User
    apiGroup: rbac.authorization.k8s.io
    name: foo@xxx.com
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
